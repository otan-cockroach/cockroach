load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "pgerror",
    srcs = [
        "errors.go",
        "errors.pb.go",
        "flatten.go",
        "internal_errors.go",
        "pgcode.go",
        "severity.go",
        "with_candidate_code.go",
        "wrap.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/sql/pgwire/pgcode",
        "//vendor/github.com/cockroachdb/errors",
        "//vendor/github.com/gogo/protobuf/proto",
        "//vendor/github.com/lib/pq",
    ],
)

go_test(
    name = "pgerror_test",
    srcs = [
        "errors_test.go",
        "flatten_test.go",
        "internal_errors_test.go",
        "main_test.go",
        "pgcode_test.go",
        "severity_test.go",
        "wrap_test.go",
    ],
    embed = [":pgerror"],
    deps = [
        "//pkg/roachpb",
        "//pkg/sql/pgwire/pgcode",
        "//pkg/util/errorutil/unimplemented",
        "//pkg/util/log",
        "//vendor/github.com/cockroachdb/errors",
        "//vendor/github.com/cockroachdb/errors/testutils",
        "//vendor/github.com/kr/pretty",
        "//vendor/github.com/stretchr/testify/require",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "errors_test.go",
        "flatten_test.go",
        "internal_errors_test.go",
        "main_test.go",
        "pgcode_test.go",
        "severity_test.go",
        "wrap_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        ":pgerror",
        "//pkg/roachpb",
        "//pkg/sql/pgwire/pgcode",
        "//pkg/util/errorutil/unimplemented",
        "//pkg/util/log",
        "//vendor/github.com/cockroachdb/errors",
        "//vendor/github.com/cockroachdb/errors/testutils",
        "//vendor/github.com/kr/pretty",
        "//vendor/github.com/stretchr/testify/require",
    ],
)
